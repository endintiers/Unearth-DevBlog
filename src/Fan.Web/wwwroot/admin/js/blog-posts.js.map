{"version":3,"sources":["../../../Areas/Admin/js/blog-posts.js"],"names":["Vue","component","mixins","blogPostsMixin","data","pagination","loading","watch","handler","activeStatus","getPosts","deep","computed","active","get","set","methods","status","url","page","rowsPerPage","axios","then","resp","posts","totalPosts","statuses","publishedCount","draftCount","window","location","href","endsWith","history","pushState","newUrl","catch","deletePost","item","index","indexOf","confirm","id","delete","headers","$root","tok","splice"],"mappings":"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","file":"blog-posts.js","sourcesContent":["ï»¿Vue.component('blog-posts', {\r\n    mixins: [blogPostsMixin],\r\n    data: () => ({\r\n        //posts: [],\r\n        //totalPosts: 0,\r\n        //statuses: null,\r\n        //publishedCount: 0,\r\n        //draftCount: 0,\r\n        // activeStatus: 'published',\r\n        pagination: {},\r\n        loading: false,\r\n        //rowsPerPageItems: [5, 10],\r\n    }),\r\n    watch: {\r\n        pagination: {\r\n            handler() {\r\n                console.log('this.activeStatus: ', this.activeStatus);\r\n                // vuetify tab caveat\r\n                if (this.activeStatus === 0)\r\n                    this.activeStatus = 'published';\r\n                else if (this.activeStatus === 1)\r\n                    this.activeStatus = 'draft';\r\n\r\n                this.getPosts(this.activeStatus);\r\n            },\r\n            deep: true,\r\n        },\r\n    },\r\n    computed: {\r\n        // vuetify tab is by physical order, thus this conversion\r\n        active: {\r\n            get: function () {\r\n                return (this.activeStatus === 'published') ? 0 : 1;\r\n            },\r\n            set: function (value) { },\r\n        },\r\n    },\r\n    methods: {\r\n        getPosts(status) {\r\n            this.activeStatus = status;\r\n            this.loading = true;\r\n            let url = `/admin/posts?handler=posts&status=${this.activeStatus}&pageNumber=${this.pagination.page}&pageSize=${this.pagination.rowsPerPage}`;\r\n            console.log(url);\r\n            axios.get(url).then(resp => {\r\n                this.posts = resp.data.posts;\r\n                this.totalPosts = resp.data.totalPosts;\r\n                this.statuses = resp.data.statuses;\r\n                this.publishedCount = resp.data.publishedCount;\r\n                this.draftCount = resp.data.draftCount;\r\n\r\n                if (window.location.href.endsWith('/admin/posts'))\r\n                    history.pushState({}, null, window.location.href + `/${this.activeStatus}`);\r\n                else if (window.location.href.endsWith('/admin/posts/published') ||\r\n                    window.location.href.endsWith('/admin/posts/draft')) {\r\n                    let newUrl = '/admin/posts/' + this.activeStatus;\r\n                    history.pushState({}, null, newUrl);\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n            this.loading = false;\r\n        },\r\n        deletePost(item) {\r\n            const index = this.posts.indexOf(item);\r\n            if (confirm('You are permanently deleting this post, are you sure?')) {\r\n                this.loading = true;\r\n                let url = `/admin/posts?postId=${item.id}&status=${this.activeStatus}&pageNumber=${this.pagination.page}&pageSize=${this.pagination.rowsPerPage}`;\r\n                axios.delete(url, { headers: { 'XSRF-TOKEN': this.$root.tok } })\r\n                    .then(resp => {\r\n                        this.posts.splice(index, 1);\r\n                        this.posts = resp.data.posts;\r\n                        this.totalPosts = resp.data.totalPosts;\r\n                        this.statuses = resp.data.statuses;\r\n                        this.draftCount = resp.data.draftCount;\r\n                        this.publishedCount = resp.data.publishedCount;\r\n                    })\r\n                    .catch(function (err) {\r\n                        console.log(err);\r\n                    });\r\n                this.loading = false;\r\n            }\r\n        },\r\n    },\r\n});\r\n"]}