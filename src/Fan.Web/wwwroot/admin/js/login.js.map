{"version":3,"sources":["../../../Areas/Admin/js/login.js"],"names":["Vue","el","data","valid","userName","nameRules","v","trim","password","passwordRules","rememberMe","errMsg","computed","tok","document","querySelector","value","payload","methods","login","axios","post","headers","then","window","location","replace","getQueryParam","catch","name","url","href","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"AAGA,GAAIA,IAAJ,CAAQ,CACJC,GAAI,MADA,CAEJC,KAAM,CACFC,QADE,CAEFC,SAAU,EAFR,CAGFC,UAAW,CACPC,GAAK,CAAC,CAACA,EAAEC,IAAF,EAAF,EAAc,+BADZ,CAHT,CAMFC,SAAU,EANR,CAOFC,cAAe,CACXH,GAAK,CAAC,CAACA,EAAEC,IAAF,EAAF,EAAc,sBADR,CAPb,CAUFG,aAVE,CAWFC,OAAQ,EAXN,CAFF,CAeJC,SAAU,CACNC,IAAK,UAAY,CACb,MAAOC,UAASC,aAAT,CAAuB,yDAAvB,EAAkFC,KAC5F,CAHK,CAINC,QAAS,UAAY,CACjB,MAAO,CACHb,SAAU,KAAKA,QADZ,CAEHI,SAAU,KAAKA,QAFZ,CAGHE,WAAY,KAAKA,UAHd,CAKV,CAVK,CAfN,CA2BJQ,QAAS,CACLC,OAAQ,CACJC,MAAMC,IAAN,CAAW,iBAAX,CAA8B,KAAKJ,OAAnC,CAA4C,CAAEK,QAAS,CAAE,aAAc,KAAKT,GAArB,CAAX,CAA5C,EACKU,IADL,CACU,IAAQ,CACVC,OAAOC,QAAP,CAAgBC,OAAhB,CAAwB,KAAKC,aAAL,CAAmB,WAAnB,GAAmC,QAA3D,CACH,CAHL,EAIKC,KAJL,CAIW,IAAO,CAEV,KAAKjB,MAAL,CAAc,iCACjB,CAPL,CAQH,CAVI,CAYLgB,cAAcE,CAAd,CAAoB,CAChB,GAAIC,GAAMN,OAAOC,QAAP,CAAgBM,IAA1B,CACAF,EAAOA,EAAKH,OAAL,CAAa,SAAb,CAAwB,MAAxB,CAFS,CAGhB,GAAIM,GAAQ,GAAIC,OAAJ,CAAW,OAASJ,CAAT,CAAgB,mBAA3B,CAAZ,CACIK,EAAUF,EAAMG,IAAN,CAAWL,CAAX,CADd,CAHgB,MAKXI,EALW,CAMXA,EAAQ,CAAR,CANW,CAOTE,mBAAmBF,EAAQ,CAAR,EAAWR,OAAX,CAAmB,KAAnB,CAA0B,GAA1B,CAAnB,CAPS,CAMQ,EANR,CAKK,IAGxB,CApBI,CA3BL,CAAR,C","file":"login.js","sourcesContent":["ï»¿/**\r\n * @see Login.cshtml\r\n */\r\nnew Vue({\r\n    el: '#app',\r\n    data: {\r\n        valid: false,\r\n        userName: '',\r\n        nameRules: [\r\n            v => !!v.trim() || 'Email or username is required',\r\n        ],\r\n        password: '',\r\n        passwordRules: [\r\n            v => !!v.trim() || 'Password is required',\r\n        ],\r\n        rememberMe: false,\r\n        errMsg: '',\r\n    },\r\n    computed: {\r\n        tok: function () {\r\n            return document.querySelector('input[name=\"__RequestVerificationToken\"][type=\"hidden\"]').value;\r\n        },\r\n        payload: function () {\r\n            return {\r\n                userName: this.userName,\r\n                password: this.password,\r\n                rememberMe: this.rememberMe,\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        login() {\r\n            axios.post('/api/auth/login', this.payload, { headers: { 'XSRF-TOKEN': this.tok } })\r\n                .then(resp => {\r\n                    window.location.replace(this.getQueryParam('ReturnUrl') || '/admin');\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.errMsg = 'Login failed, please try again!';\r\n                });\r\n        },\r\n        // https://stackoverflow.com/a/901144/32240\r\n        getQueryParam(name) {\r\n            let url = window.location.href;\r\n            name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n            let regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n                results = regex.exec(url);\r\n            if (!results) return null;\r\n            if (!results[2]) return '';\r\n            return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n        }\r\n    }\r\n})"]}